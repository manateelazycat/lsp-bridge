name: test
on: [ push, pull_request, workflow_dispatch ]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        emacs_version:
          - "27.2"

    steps:
      - uses: actions/checkout@v2

      - name: Install emacs (Linux)
        uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs_version }}
        if: matrix.os != 'windows-latest'

      - name: Install emacs (Windows)
        uses: jcs090218/setup-emacs-windows@master
        with:
          version: ${{ matrix.emacs_version }}
        if: matrix.os == 'windows-latest'

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
          architecture: "x64"

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'

      - name: Install Dependencies (Linux)
        run: |
          # sudo apt-get install clangd-12
          # sudo update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-12 100
          pip install epc six pyright sexpdata
          go install golang.org/x/tools/gopls@latest
          curl https://raw.githubusercontent.com/eruizc-dev/jdtls-launcher/master/install.sh | bash
        if: matrix.os == 'ubuntu-latest'

      - name: Install Dependencies (Windows)
        run: |
          # choco install llvm
          python -m pip install epc six pyright sexpdata
          go install golang.org/x/tools/gopls@latest
        if: matrix.os == 'windows-latest'

      - name: test
        run: |
          echo ${PATH}
          python3 -m test.test

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: test-log
          path: test.log
          retention-days: 3